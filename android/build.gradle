buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["EidSdk_kotlinVersion"]

  repositories {
    google()
    mavenCentral()

    jcenter()



  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["EidSdk_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["EidSdk_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.eid.sdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

//  buildFeatures {
////    compose = true
//    buildConfig = true
//    viewBinding = true
//  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
  jcenter()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


  //
  implementation("androidx.appcompat:appcompat:1.6.1")
  implementation("com.google.android.material:material:1.11.0")
  implementation("com.airbnb.android:lottie:6.1.0")


  implementation("com.google.android.gms:play-services-mlkit-text-recognition:19.0.0")

  implementation("com.squareup.retrofit2:converter-gson:2.9.0")
  implementation("org.jmrtd:jmrtd:0.7.37")
  implementation("net.sf.scuba:scuba-sc-android:0.0.23")
  implementation("com.madgag.spongycastle:prov:1.58.0.0")
  implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
//  implementation("org.bouncycastle:bcpkix-jdk15on:1.70") {
//    exclude(group = "org.bouncycastle", module = "bcprov-jdk15on")
//    exclude(group = "org.bouncycastle", module = "bcutil-jdk15on")
//
//  }

  implementation('org.bouncycastle:bcpkix-jdk15on:1.70') {
    exclude(group : 'org.bouncycastle', module: "bcprov-jdk15on")
    exclude(group : "org.bouncycastle", module : "bcutil-jdk15on")
  }

  implementation(files("libs/xverifysdk-dev-debug.aar"))

  implementation("com.mobsandgeeks:android-saripaar:2.0.3")
  implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
  implementation("io.reactivex.rxjava2:rxjava:2.2.21")
  implementation("io.fotoapparat:fotoapparat:2.7.0")
  implementation("androidx.camera:camera-camera2:1.2.3")
  implementation("androidx.camera:camera-core:1.2.3")
  implementation("androidx.camera:camera-lifecycle:1.2.3")
}
